
ðŸ“‚ Frontend Tree Structure (Template for frontend)

â”œâ”€â”€ .env                          # Environment variables for frontend configuration
â”œâ”€â”€ .gitignore                    # Specifies files/folders to be ignored by Git
â”œâ”€â”€ frontend_tree.txt             # Text file representing frontend folder structure
â”œâ”€â”€ next.config.js                # Next.js framework configuration file
â”œâ”€â”€ package-lock.json             # Auto-generated dependency lock file
â”œâ”€â”€ package.json                  # Project metadata and frontend dependencies
â”œâ”€â”€ public                        # Publicly accessible static assets
â”‚   â”œâ”€â”€ favicon.ico               # Browser tab icon
â”‚   â””â”€â”€ images                    # Static images folder
â”‚       â””â”€â”€ logo.png              # Website logo image
â”œâ”€â”€ README.md                     # Frontend project documentation
â”œâ”€â”€ setupFrontend.mjs             # Script to initialize or setup the frontend
â”œâ”€â”€ src                           # Source code directory for the app
â”‚   â”œâ”€â”€ api                       # API integration layer for backend communication
â”‚   â”‚   â”œâ”€â”€ authAPI.js            # API calls for authentication
â”‚   â”‚   â”œâ”€â”€ blogAPI.js            # API endpoints for blog operations
â”‚   â”‚   â”œâ”€â”€ bookingAPI.js         # API methods related to bookings
â”‚   â”‚   â”œâ”€â”€ emailAPI.js           # Email service API interactions
â”‚   â”‚   â”œâ”€â”€ paymentAPI.js         # Handles payment-related API calls
â”‚   â”‚   â””â”€â”€ productAPI.js         # API functions for products
â”‚   â”œâ”€â”€ App.js                    # Root React component and app entry point
â”‚   â”œâ”€â”€ assets                    # Stylesheets and scripts for UI/UX
â”‚   â”‚   â”œâ”€â”€ css                   # Custom CSS files
â”‚   â”‚   â”‚   â””â”€â”€ styles.css        # Main stylesheet for the application
â”‚   â”‚   â””â”€â”€ js                    # JavaScript utilities
â”‚   â”‚       â””â”€â”€ utils.js          # Shared utility functions
â”‚   â”œâ”€â”€ components                # Reusable UI components
â”‚   â”‚   â”œâ”€â”€ ContactForm.jsx       # Component for contact form UI
â”‚   â”‚   â”œâ”€â”€ Footer.jsx            # Footer section of the website
â”‚   â”‚   â”œâ”€â”€ Header.jsx            # Header section of the site
â”‚   â”‚   â”œâ”€â”€ Loader.jsx            # Loading spinner component
â”‚   â”‚   â””â”€â”€ Navbar.jsx            # Top navigation bar component
â”‚   â”œâ”€â”€ config                    # Configuration files
â”‚   â”‚   â””â”€â”€ axiosConfig.js        # Axios setup for HTTP requests
â”‚   â”œâ”€â”€ context                   # Global state/context using React Context API
â”‚   â”‚   â””â”€â”€ AuthContext.js        # Context for user authentication state
â”‚   â”œâ”€â”€ layouts                   # Common layout wrappers for pages
â”‚   â”‚   â”œâ”€â”€ AdminLayout.jsx       # Layout for admin panel pages
â”‚   â”‚   â””â”€â”€ MainLayout.jsx        # Main layout for regular user-facing pages
â”‚   â”œâ”€â”€ pages                     # Page-level React components
â”‚   â”‚   â”œâ”€â”€ About.jsx             # About page
â”‚   â”‚   â”œâ”€â”€ auth                  # Authentication-related pages
â”‚   â”‚   â”‚   â”œâ”€â”€ Login.jsx         # Login screen
â”‚   â”‚   â”‚   â””â”€â”€ Register.jsx      # User registration screen
â”‚   â”‚   â”œâ”€â”€ blog                  # Blog section components
â”‚   â”‚   â”‚   â””â”€â”€ BlogList.jsx      # Component to list blog posts
â”‚   â”‚   â”œâ”€â”€ booking               # Booking process screens
â”‚   â”‚   â”‚   â””â”€â”€ BookingForm.jsx   # Form for booking services
â”‚   â”‚   â”œâ”€â”€ Contact.jsx           # Contact page UI
â”‚   â”‚   â”œâ”€â”€ Home.jsx              # Home page UI
â”‚   â”‚   â”œâ”€â”€ index.jsx             # Default route landing page
â”‚   â”‚   â”œâ”€â”€ NotFound.jsx          # 404 - Page not found component
â”‚   â”‚   â”œâ”€â”€ payments              # Payment-related components
â”‚   â”‚   â”‚   â””â”€â”€PaymentSuccess.jsx # Confirmation page after successful payment
â”‚   â”‚   â””â”€â”€ _app.js               # Global app configuration for Next.js
â”‚   â”œâ”€â”€ routes                    # Centralized route configurations
â”‚   â”‚   â””â”€â”€ AppRoutes.jsx         # Application routes definition
â”‚   â”œâ”€â”€ server.js                 # Express server setup (if SSR or proxy used)
â”‚   â”œâ”€â”€ services                  # Business logic abstraction layer
â”‚   â”‚   â”œâ”€â”€ authService.js        # Authentication service logic
â”‚   â”‚   â”œâ”€â”€ blogService.js        # Blog service operations
â”‚   â”‚   â”œâ”€â”€ bookingService.js     # Booking functionality logic
â”‚   â”‚   â”œâ”€â”€ emailService.js       # Email handler logic
â”‚   â”‚   â”œâ”€â”€ paymentService.js     # Payment processing logic
â”‚   â”‚   â””â”€â”€ productService.js     # Product data and interaction logic
â”‚   â”œâ”€â”€ store                     # State management (possibly Redux or Context)
â”‚   â”‚   â”œâ”€â”€ actions.js            # Global action creators
â”‚   â”‚   â””â”€â”€ reducers.js           # Reducers to update state
â”‚   â””â”€â”€ utils                     # Shared utility functions
â”‚       â”œâ”€â”€ apiErrorHandler.js    # Handles errors from API responses
â”‚       â”œâ”€â”€ constants.js          # Common constants used throughout the app
â”‚       â””â”€â”€ formValidation.js     # Functions to validate form inputs
â”œâ”€â”€ tree.js                       # Script to generate project structure
â””â”€â”€ tree_Structure.txt            # File containing project tree information
