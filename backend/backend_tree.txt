ðŸ“‚ Project Directory Tree

â”œâ”€â”€ .env                          # Environment variables
â”œâ”€â”€ .gitignore                   # Git ignore configuration
â”œâ”€â”€ .prettierignore              # Prettier ignore configuration
â”œâ”€â”€ .prettierrc                  # Prettier configuration
â”œâ”€â”€ package-lock.json            # Package lock file
â”œâ”€â”€ package.json                 # Project dependencies and scripts
â”œâ”€â”€ public                       # Public static files
â”‚   â””â”€â”€ temp                     # Temporary folder
â”‚       â””â”€â”€ token.js             # Temporary token storage
â”œâ”€â”€ README.md                    # Project documentation
â”œâ”€â”€ src                          # Source code root
â”‚   â”œâ”€â”€ app.js                   # Application entry point
â”‚   â”œâ”€â”€ config                   # App configuration files
â”‚   â”‚   â”œâ”€â”€ db.js                # Database configuration
â”‚   â”‚   â”œâ”€â”€ email.config.js      # Email service configuration
â”‚   â”‚   â”œâ”€â”€ env.config.js        # Environment variables setup
â”‚   â”‚   â”œâ”€â”€ logger.config.js     # Logger configuration
â”‚   â”‚   â””â”€â”€ payment.config.js    # Payment integration config
â”‚   â”œâ”€â”€ constant.js              # Application-wide constants
â”‚   â”œâ”€â”€ controllers              # Controller logic
â”‚   â”‚   â”œâ”€â”€ auth.controller.js   # Authentication logic
â”‚   â”‚   â”œâ”€â”€ blog.controller.js   # Blog handling logic
â”‚   â”‚   â”œâ”€â”€ booking.controller.js# Booking functionality
â”‚   â”‚   â”œâ”€â”€ email.controller.js  # Email-related logic
â”‚   â”‚   â”œâ”€â”€ payment.controller.js# Payment operations
â”‚   â”‚   â””â”€â”€ product.controller.js# Product operations
â”‚   â”œâ”€â”€ docs                     # API documentation
â”‚   â”œâ”€â”€ middleware               # Middleware for request handling
â”‚   â”‚   â”œâ”€â”€ auth.middleware.js   # Authentication checks
â”‚   â”‚   â”œâ”€â”€ error.middleware.js  # Global error handling
â”‚   â”‚   â”œâ”€â”€ multer.middleware.js # File upload handling
â”‚   â”‚   â”œâ”€â”€ role.middleware.js   # Role-based access control
â”‚   â”‚   â”œâ”€â”€ upload.middleware.js # Upload processing
â”‚   â”‚   â””â”€â”€ validate.middleware.js# Input validation
â”‚   â”œâ”€â”€ models                   # Database models
â”‚   â”‚   â”œâ”€â”€ blog.model.js        # Blog schema and model
â”‚   â”‚   â”œâ”€â”€ booking.model.js     # Booking schema and model
â”‚   â”‚   â”œâ”€â”€ payment.model.js     # Payment schema and model
â”‚   â”‚   â”œâ”€â”€ product.model.js     # Product schema and model
â”‚   â”‚   â””â”€â”€ user.model.js        # User schema and model
â”‚   â”œâ”€â”€ routes                   # Route definitions
â”‚   â”‚   â”œâ”€â”€ auth.routes.js       # Authentication routes
â”‚   â”‚   â”œâ”€â”€ blog.routes.js       # Blog routes
â”‚   â”‚   â”œâ”€â”€ booking.routes.js    # Booking routes
â”‚   â”‚   â”œâ”€â”€ email.routes.js      # Email routes
â”‚   â”‚   â”œâ”€â”€ index.routes.js      # Combined index routes
â”‚   â”‚   â”œâ”€â”€ payment.routes.js    # Payment routes
â”‚   â”‚   â””â”€â”€ product.routes.js    # Product routes
â”‚   â”œâ”€â”€ scripts                  # Custom scripts or tools
â”‚   â”œâ”€â”€ server.js                # Server startup file
â”‚   â”œâ”€â”€ services                 # Business logic layer
â”‚   â”‚   â”œâ”€â”€ auth.service.js      # Auth services
â”‚   â”‚   â”œâ”€â”€ blog.service.js      # Blog services
â”‚   â”‚   â”œâ”€â”€ booking.service.js   # Booking services
â”‚   â”‚   â”œâ”€â”€ email.service.js     # Email services
â”‚   â”‚   â”œâ”€â”€ payment.service.js   # Payment services
â”‚   â”‚   â””â”€â”€ product.service.js   # Product services
â”‚   â”œâ”€â”€ tests                   # Test cases
â”‚   â”œâ”€â”€ uploads                 # Uploaded assets
â”‚   â”œâ”€â”€ utils                   # Utility functions
â”‚   â”‚   â”œâ”€â”€ ApiError.js          # Custom error class
â”‚   â”‚   â”œâ”€â”€ ApiResponse.js       # Standard API responses
â”‚   â”‚   â”œâ”€â”€ asyncHandler.js      # Async error handler wrapper
â”‚   â”‚   â”œâ”€â”€ cloudinary.js        # Cloudinary integration
â”‚   â”‚   â”œâ”€â”€ email.utils.js       # Email utility functions
â”‚   â”‚   â”œâ”€â”€ errorHandler.js      # Error handler logic
â”‚   â”‚   â”œâ”€â”€ generateToken.js     # Token generation logic
â”‚   â”‚   â”œâ”€â”€ logger.js            # Logger utility
â”‚   â”‚   â”œâ”€â”€ payment.utils.js     # Payment helper functions
â”‚   â”‚   â”œâ”€â”€ sendEmail.js         # Email sender utility
â”‚   â”‚   â””â”€â”€ validateInput.js     # Input validation logic
â”‚   â”œâ”€â”€ validations              # Input validation schemas
â”‚   â””â”€â”€ views                    # Email views/templates
â”‚       â””â”€â”€ emails
â”‚           â””â”€â”€ resetPassword.html # Reset password email template
â””â”€â”€ tree.js                      # Tree visual generator
